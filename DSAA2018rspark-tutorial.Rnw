\documentclass{beamer}
\usepackage{beamerthemeSingapore}

\usepackage{amsfonts,amsmath,amssymb}
\usepackage{amssymb}
\usepackage{graphics}
\usepackage{graphicx}
\usepackage{colortbl}
\usepackage{wasysym}
\usepackage{verbatim}
\usepackage{hyperref}
\hypersetup{colorlinks=true}
\usepackage{Sweave}

\newcommand{\pkg}[1]{{\normalfont\fontseries{b}\selectfont #1}}
\let\proglang=\textsf
\let\code=\texttt


\title{Data Science Workflows Using R and Spark}

\author{E. James (Jim) Harner}
\institute[West Virginia University]{
  Department of Statistics\\
  Department of Management Information Systems\\
  West Virginia University
}

\date[]{August 29, 2018}

\subject{}

% Delete this, if you do not want the table of contents to pop up at
% the beginning of each subsection:
\AtBeginSubsection[]
{
  \begin{frame}<beamer>
    \frametitle{Outline}
    \tableofcontents[currentsection,currentsubsection]
  \end{frame}
}

% If you wish to uncover everything in a step-wise fashion, uncomment
% the following command: 
%\beamerdefaultoverlayspecification{<+->}

\begin{document}
\SweaveOpts{concordance=TRUE}
% \SweaveOpts{concordance=TRUE}

\begin{frame}
  \titlepage
\end{frame}

\begin{frame}
  \frametitle{Outline}
  \tableofcontents
  % You might wish to add the option [pausesections]
\end{frame}

\section{Fundamentals}

\begin{frame}[containsverbatim]
  \frametitle{The Components of this Tutorial}
This tutorial covers data science workflows using \proglang{R} as both an analysis and graphics engine and as an interface to databases, Hadoop, Spark, etc.\\
\vspace{0.5 cm}
The following are the required components of this tutorial:
\begin{itemize}
  \item the DSAA tutorial slides (these slides)
  \item the tutorial notebook content
  \item the \texttt{rspark} computational environment
  \item the \texttt{rspark-docker} images
\end{itemize}
These components are discussed in the next few slides.
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{The R Computational Environment}
The primary language used in this tutorial is \proglang{R}, but a working knowledge of bash scripts and SQL is useful. You should download and install R if you have not already done so. Go to: \texttt{https://www.r-project.org}\\
\vspace{0.5 cm}
Likewise, you should install the RStudio IDE, which is found here:\\
\texttt{https://www.rstudio.com}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{The DSAA Tutorial Beamer Slides}

The tutorial slides provide an overview of the tutorial content. The GitHub repo for the slides can be found \href{https://github.com/jharner/DSAA2018rspark-tutorial}{here}:\\
https://github.com/jharner/DSAA2018rspark-tutorial\\
\vspace{0.5 cm}
Go to the site and click on the green button to clone the repo to your computer. Alternatively, clone this repo by issuing the following command from a terminal:\\
\texttt{git clone https://github.com/jharner/DSAA2018rspark-tutorial.git}\\
\vspace{0.5 cm}
These slides are not the main source of content for this tutorial The R markdown notebook documents in the next slide provide the detailed, execuatable content.
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{The Tutorial Notebook Content}
  
The interactive, executable content of this tutorial is available in a GitHub repo called \href{https://github.com/jharner/rspark-tutorial}{rspark-tutorial} found at:\\
\texttt{https://github.com/jharner/rspark-tutorial}\\
\vspace{0.5 cm}
As before, go to the site and click on the green button to clone the repo to your computer. You can also clone this repo with the following command:\\
\texttt{git clone https://github.com/jharner/rspark-tutorial.git}\\
\vspace{0.5 cm}
The \texttt{rspark-tutorial} consists of executable R markdown documents organized into modules containing sections. These tutorial documents are executed within \texttt{rspark}.\\

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{The rspark Computational Environment}
  
This \texttt{rspark-tutorial} local repo can then be imported into the computional environment used in this tutorial, which is called \href{https://github.com/jharner/rspark}{rspark}.\\
\vspace{0.5 cm}
The \texttt{rspark} computational environment is available in several GitHub repos depending on whether you want to built the environment from scratch or you you want to download pre-built images. Assuming the latter, go to the \href{https://github.com/jharner/rspark-docker}{rspark-docker} repo:\\
\texttt{https://github.com/jharner/rspark-docker}\\
\vspace{0.5 cm}
Go to the site and click on the green button to clone the repo to your computer. Alternatively, clone this repo by issuing the following command from a terminal:\\
\texttt{git clone https://github.com/jharner/rspark-docker.git}.
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Running rspark}
  
In order to execute the content in the \texttt{rspark-tutorial}, the \texttt{rspark} computational environment must be run as a web applicaton. Follow the directions in the \texttt{rspark-docker} to launch \texttt{rspark}.\\
\vspace{0.5 cm}
Once \texttt{rspark} is running, import the \texttt{rspark-tutorial} by clicking on the \texttt{Files} tab in RStudio server. The \texttt{rspark-tutorial} directory must be zipped before being imported. Click on the \texttt{Upload} option under the \texttt{Files} tab and navigate to the \texttt{rspark-tutorial.zip} file and upload it.\\
\vspace{0.5 cm}
You can now execute the R markdown documents, i.e., those with the \texttt{.Rmd} suffix. These files can be executed interatively as notebooks or knitted to html, pdf, or Word documents.
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Running the DSAA Tutorial Slides}
  
The slides cannot be executed in \texttt{rspark}'s \texttt{rstudio} docker container since the full publishing capability of RStudio is not supported. In particular the \LaTeX Beamer package (and other components of \LaTeX) was not installed to keep the container size reasonable.\\
\vspace{0.5 cm}
As a result, the \texttt{DSAA2018rspark-tutorial} repo must be executeds within a local version of RStudio.
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{What is Data Science?}
Data science combines elements of statistics and computer science to develop methodologies to analyze large, complex data and streaming data within various subject-matter areas.
\begin{center}
\includegraphics[height=0.7\textheight]{figures/DataScienceVenn2.png}
\end{center}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Data Science Process}
The \href{http://www.stat.wvu.edu/~jharner/biostatistics/workflow.html}{data science process} is a workflow from data extraction to data products:
\begin{center}
  \includegraphics[height=0.75\textheight]{figures/DataScienceProcess.png}
\end{center}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{What is a Data Scientist?}
Josh Wills:\\
\vspace{0.5 cm}
{\bf Data Scientist} (n.) Person who is better at statistics than any software engineer and better at software engineering than any statistician.
\end{frame}

\section{Data Sources}

\begin{frame}[containsverbatim]
  \frametitle{Programming Languages}
\begin{description}
  \item[\href{https://www.r-project.org/about.html}{R}] A language and environment for statistical computing and graphics.
  \item[\href{https://www.python.org}{Python}] An interpreted, high-level programming language widely used in data science.
  \item[\href{https://www.javascript.com/}{JavaScript}] A high-level, dynamic programming language for creating interactive web pages and graphics.
  \item[\href{https://en.wikipedia.org/wiki/Bash_(Unix_shell)}{bash}] A processor that runs UNIX (\href{http://www.stat.wvu.edu/~jharner/biostatistics/linux.html}{Linux}) commands interactively or from shell scrips.
  \item[\href{https://www.sas.com/en_us/home.html}{SAS}] A propriety programming language for data management, statistical analyses, and advanced analytics.
\end{description}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Why I like R!}
  
Hadley Wickham's \href{http://adv-r.had.co.nz}{Advanced R} provides a lot of reasons.\\
\vspace{0.25cm}
My favoriate features:
\begin{description}
  \item[Functional Programming:]  Assign \href{http://www.stat.wvu.edu/~jharner/biostatistics/functions.html}{functions} to variables, store them in lists, pass them as arguments to other functions, create them inside functions, and even return them as the result of a function. (See Newton's method example.)
  \item[Multiple Object Oriented (OO) Systems:] S3 (generic function OO); S4 (formal class definitions), etc.
  \item[Rich Data Structures and Workflows] \href{http://www.stat.wvu.edu/~jharner/biostatistics/dstructures.html}{Vectors, data frames}, etc.
  \item[Domain Specific Languages:]  A powerful toolkit for creating embedded domain specific languages (DSLs), e.g., HTML, LaTeX, R formulas, SQL, etc.
\end{description}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{R Code}
\href{http://www.stat.wvu.edu/~jharner/biostatistics/root.html}{R code}\\ embedded within Latex Beamer.
<<>>=
newton_search <- function(f, df, guess, conv=0.001) {
# Note: If f does not have a root, we could be in an infinite loop.
  improve <- function(guess, f, df) {
    guess - f(guess) / df(guess)
  }
  while(abs(f(guess)) > conv) {
    guess <- improve(guess, f, df)
  }
  guess
}
newton_search(f = sin, df = cos, guess = 3)
@
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Data Wrangling}
Garrett Grolemund's and Hadley Wickham's \href{http://r4ds.had.co.nz}{R for Data Science} is being developed to look at data:
\begin{description}
  \item[Import] Import data from text files, the Web (curl), SQL databases, NoSQL databases, etc.
  \item[Tidying] Match the semantics of a dataset with how it is stored.
  \item[Transformation]  Subset data, create new variables, summarize data, etc.
  \item[Visualization] 
  \item[Modeling]
  \item[Communication]
\end{description}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Machine Learning}
\begin{center}
  \includegraphics[height=0.75\textheight]{figures/MachineLearning.png}
\end{center}
\end{frame}

\section{Data Transformations}

\begin{frame}[containsverbatim]
  \frametitle{Machine Learning Algorithms}
\href{http://www.stat.wvu.edu/~jharner/biostatistics/ml_basics.html}{Machine learning algorithms} are largely used to predict, classify, or cluster.
% \vspace{0.25cm}
\begin{itemize}
    \item Prediction and classification are examples of \textbf{supervised learning}, whereas 
    \item clustering is an example of \textbf{unsupervised learning}.
\end{itemize}

Put another way, supervised learning is concerned with problems that have a measurable (or labeled) response variable and unsupervised learning is concerned with problems without a response variable.

\begin{itemize}
  \item \textbf{Statistical modeling} is done (primarily) to infer the underlying generative process.
  \item \textbf{Machine learning algorithms} are used to predict or classify with the most accuracy. They form the basis of data products. 
\end{itemize}
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Reproducible Research}
  
Reproducible research is the idea that data analyses and, more generally, scientific claims, are published with their data and software code so that others may verify the findings and build upon them. (Johns Hopkins University/ Coursera)\\
\vspace{0.2cm}
Reproducible research can be done using R markdown documents or R notebooks. R markdown allows LaTeX equations and R code to be embedded in markdown documents. In addition, other languages are also supported, e.g., Python and bash engines.

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Open Source Big Data Architectures}
What data architecture is needed for big data analytics?\\
\vspace{0.0cm}

\begin{description}
	\item[\href{http://hortonworks.com/hdp/}{HDFS/Hadoop}] A software framework for distributed storage (\href{http://www.cloudera.com/content/cloudera/en/products-and-services/cdh/hdfs-and-mapreduce.html}{HDFS}) and distributed processing (\href{http://en.wikipedia.org/wiki/MapReduce}{MapReduce}).
	\item[\href{http://www.alluxio.org}{Alluxio}/\href{http://amplab.cs.berkeley.edu/software/}{Spark}] A cluster computing environment using in-memory primitives rather than Hadoop's two-stage, disk-based MapReduce approach.
	\item[\href{https://flink.apache.org}{Flink}] A streaming dataflow engine that provides data distribution, communication, and fault tolerance for distributed computations over data streams.
\end{description}

How do we access these big data processing architectures? From an R perspective: \href{https://www.rstudio.com}{RStudio}.
\end{frame}

\section{Hadoop}

\begin{frame}[containsverbatim]
  \frametitle{HDFS/ Hadoop}
This demo illustrates MapReduce run in a dockerized container environment. Two containers are created here---one for RStudio Server and one for Hadoop.\\
\vspace{0.2cm}
\href{http://www.stat.wvu.edu/~jharner/biostatistics/rhadoop.html}{RHadoop Demo}\\
\vspace{0.2cm}
It would be possible to create a virtual cluster (even on your laptop) having a master and worker nodes using \href{https://www.docker.com/what-docker}{Docker containers}. These containers could be managed by \href{http://kubernetes.io}{kubernetes} or \href{http://mesos.apache.org}{Mesos}.

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Batch Architecture}
\includegraphics[height=0.85\textheight]{figures/BatchArch.png} 
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Streaming Architecture}
\includegraphics[height=0.85\textheight]{figures/StreamArch.png} 
\end{frame}

\section{Spark}

\begin{frame}[containsverbatim]
  \frametitle{YARN/ Spark}

Spark can be run in a general way by downloading the \href{http://spark.apache.org/downloads.html}{Spark distribution}. This allow Spark to be run using Python, R, the command line, etc.\\
\vspace{0.2cm}
Spark can also be run directly in RStudio using the \href{http://spark.rstudio.com}{sparklyr} package. This is the main way Spark will be run in this program.\\
\vspace{0.2cm}
For example, see:\\
\href{http://www.stat.wvu.edu/~jharner/biostatistics/regression.html}{Regression}\\
\href{http://www.stat.wvu.edu/~jharner/biostatistics/regularization.html}{Regularization}\\
\href{http://www.stat.wvu.edu/~jharner/biostatistics/slump.html}{Slump Regressopm}

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{RStudio Server}
  
RStudio is a powerful, open-source IDE for R.\\
\vspace{0.2cm}
RStudio Server
\begin{itemize}
	\item provides a productive, web-based user interface for R;
	\item deploys on Linux platforms;
	\item supports both Sweave and \href{http://rmarkdown.rstudio.com}{R Markdown};
	\item supports interactive web application development using Shiny and Shiny Server;
	\item allows collaboration among team members (Prp version only).
\end{itemize}

\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{IDE Features}
  
As an IDE, RStudio:
\begin{itemize}
	\item supports syntax highlighting, code completion, and smart indentation;
	\item allows code go be directly executed from the source editor;
	\item supports integrated R help;
	\item has a workspace browser;
	\item has an interactive debugger allowing the developer to find and fix errors quickly;
	\item has extensive support for developing packages
\end{itemize}
 
\end{frame}

\begin{frame}[containsverbatim]
  \frametitle{Projects}
  
RStudio allows the creation of projects.\\
\vspace{0.2cm}
RStudio projects can be created:
\begin{itemize}
	\item in a new directory;
	\item from an existing directory containing R code and data;
	\item from a version control Git or Subversion directory. 
\end{itemize}
RStudio has support for multiple simultaneous projects.\\
\vspace{0.2cm}
Version control allows the coordination of team work and benefits individual work.

\end{frame}

\section{Supervised Learning}

\begin{frame}[containsverbatim]
  \frametitle{Projects}
  
RStudio allows the creation of projects.\\
\vspace{0.2cm}
RStudio projects can be created:
\begin{itemize}
	\item in a new directory;
	\item from an existing directory containing R code and data;
	\item from a version control Git or Subversion directory. 
\end{itemize}
RStudio has support for multiple simultaneous projects.\\
\vspace{0.2cm}
Version control allows the coordination of team work and benefits individual work.

\end{frame}

\section{Unsupervised Learning}

\begin{frame}[containsverbatim]
  \frametitle{Git/ GitHub}
  
RStudio internally supports Git and GitHub.
\vspace{0.2cm}
Git is a distributed version control system for tracking changes in code or text. It allows multiple creators to coordinate their work on the files in the git repository (repo).\\
\vspace{0.2cm}
GitHub is a web-based Git repository and Internet hosting service.\\
\vspace{0.2cm}
I have a repo for building a virtual \href{https://github.com/jharner/rspark}{R/ Hadoop/ Spark cluster environment} which mimics the BUDA cluster.\\

\end{frame}

\end{document}


